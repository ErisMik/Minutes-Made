#user html;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #######################################################
    # www Landing Page Static Route
    server {
        server_name www.minutesmade.com;
        root /www/data;

        index index.html;

        location / {
            # Only allow traffic from the proxy passthrough server
            allow   35.243.200.156;
            deny    all;

            # Return 404 if any file not found
            try_files $uri $uri/ =404;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/www.minutesmade.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/www.minutesmade.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    #######################################################
    # Dev Deployment Route Configuration
    server {
        server_name dev.minutesmade.com;

        location / {
            # Only allow traffic from the proxy passthrough server
            allow   35.243.200.156;
            deny    all;

            # Pass on to the Minutes Made dev server
            proxy_pass          http://127.0.0.1:8089;
            proxy_read_timeout  90;

            # Enable websockets
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "upgrade";
            proxy_request_buffering off;

            # Use basic auth to secure the endpoint
            auth_basic              "Auth Login";
            auth_basic_user_file    /etc/nginx/conf.d/nginx.htpasswd;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/dev.minutesmade.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/dev.minutesmade.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    #######################################################
    # Docker Registry Route Configuration
    server {
        server_name docker.minutesmade.com;

        location /v2/ {
            # Only allow traffic from the proxy passthrough server
            allow   35.243.200.156;
            deny    all;

            # Set the proxy header information
            proxy_set_header    Host $host:$server_port;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;

            # Pass on to the docker registry server
            proxy_pass          http://127.0.0.1:8091;
            proxy_read_timeout  90;

            # Enable long stream connections
            proxy_http_version      1.1;
            proxy_request_buffering off;

            # Disable any limits to avoid HTTP 413 for large image uploads
            client_max_body_size        0;
            chunked_transfer_encoding   on;

            # Use basic auth to secure the endpoint
            auth_basic              "Registry realm";
            auth_basic_user_file    /etc/nginx/conf.d/nginx.htpasswd;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/docker.minutesmade.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/docker.minutesmade.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    #######################################################
    # Jenkins Server Route Configuration
    server {
        server_name jenkins.minutesmade.com;

        location / {
            # Only allow traffic from the proxy passthrough server
            allow   35.243.200.156;
            deny    all;

            # Set the proxy header information
            proxy_set_header    Host $host:$server_port;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;

            # Pass on to the jenkins server
            proxy_pass          http://127.0.0.1:8090;
            proxy_read_timeout  90;
            proxy_redirect      http://127.0.0.1:8090 https://jenkins.minutesmade.com;

            # Required for new HTTP-based CLI
            proxy_http_version 1.1;
            proxy_request_buffering off;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/docker.minutesmade.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/docker.minutesmade.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    # Redirect www.minutesmade.com http -> https
    server {
        if ($host = www.minutesmade.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name www.minutesmade.com;
        listen 80;
        return 404; # managed by Certbot
    }

    # Redirect dev.minutesmade.com http -> https
    server {
        if ($host = dev.minutesmade.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        server_name dev.minutesmade.com;
        listen 80;
        return 404; # managed by Certbot
    }

    # Redirect docker.minutesmade.com http -> https
    server {
        if ($host = docker.minutesmade.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name docker.minutesmade.com;
        listen 80;
        return 404; # managed by Certbot
    }

    # Redirect jenkins.minutesmade.com http -> https
    server {
        if ($host = jenkins.minutesmade.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name jenkins.minutesmade.com;
        listen 80;
        return 404; # managed by Certbot
    }
}
